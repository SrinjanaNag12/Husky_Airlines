/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.FoodAllocation;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.ArrivalEnterprise;
import Business.Network.Network;
import Business.Organization.Immigration;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FoodAllocationWorkRequest;
import Business.WorkQueue.ImmigrationCheckWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 
 */
public class FoodAllocationWorkRequestJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    FoodAllocationWorkRequest request;
    private UserAccount userAccount;
    private EcoSystem business;

    /**
     * Creates new form ProcessWorkRequestJPanel
     */
    public FoodAllocationWorkRequestJPanel(JPanel userProcessContainer, FoodAllocationWorkRequest request, UserAccount userAccount, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        this.userAccount = userAccount;
        this.business = business;
        populateTable();
    }

       /**
     * Populates table
     */
    public void populateTable() {
        DefaultTableModel model1 = (DefaultTableModel) tblPassengerRecords.getModel();
        DefaultTableModel model2 = (DefaultTableModel) tblPassengerRecords1.getModel();
        model1.setRowCount(0);
        model2.setRowCount(0);
        if (request.getPassengerPerson() != null) {
            Object[] row = new Object[8];
            row[0] = request.getPassengerPerson().getName();
            row[1] = request.getPassengerPerson().getDob();
            row[2] = request.getPassengerPerson().getDestinationCity();
            row[3] = request.getPassengerPerson().getSourceLocation();
            row[4] = request.getPassengerPerson().getPassportNumber();
            row[5] = request.getPassengerPerson().getContactNo();
            row[6] = request.getPassengerPerson().getEmailAddress();
            row[7] = request.getPassengerPerson().getPassportExpiry();
            model1.addRow(row);
            Object[] rowSecond = new Object[6];
            rowSecond[0] = request.getsecurityCheckWorkRequest().getAllocatedSeat().toString();
            rowSecond[1] = request.getPassengerPerson().getFoodPreference();
            rowSecond[2] = request.getPassengerPerson().isHasCriminalRecord() ? "Yes" : "No";
            rowSecond[3] = request.getPassengerPerson().isPreConditions() ? "Yes" : "No";
            rowSecond[4] = request.getPassengerPerson().isMedication() ? "Yes" : "No";
            rowSecond[5] = request.getPassengerPerson().isAccomodationReq() ? "Yes" : "No";
            model2.addRow(rowSecond);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        backJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPassengerRecords = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPassengerRecords1 = new javax.swing.JTable();
        btnFoodAllocated = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(153, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backJButton.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        backJButton.setText("< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 50));

        tblPassengerRecords.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        tblPassengerRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "DOB", "Source", "current address", "Passport No", "Contact No", "Email Address", "Passport Expiry Date"
            }
        ));
        jScrollPane1.setViewportView(tblPassengerRecords);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 185, 1155, 103));

        tblPassengerRecords1.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        tblPassengerRecords1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seat Type", "Food Preference", "Criminal Record?", "Medical Condition??", "Medication??", "Special Requirements??"
            }
        ));
        jScrollPane2.setViewportView(tblPassengerRecords1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 300, 1155, 105));

        btnFoodAllocated.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        btnFoodAllocated.setText("Food Allocated");
        btnFoodAllocated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFoodAllocatedActionPerformed(evt);
            }
        });
        jPanel1.add(btnFoodAllocated, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 423, 250, 50));

        jLabel1.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Food Allocation Work Area");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1155, -1));

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Passenger Details:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 143, 1155, 34));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1173, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 729, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
                    .addContainerGap()))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        FoodAllocationTestWorkAreaJPanel dwjp = (FoodAllocationTestWorkAreaJPanel) component;
        dwjp.populateReceiveTable();
        dwjp.populateSentTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnFoodAllocatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFoodAllocatedActionPerformed
        if (request.getStatus().equals("Completed")) {
            JOptionPane.showMessageDialog(null, "This request has already been completed by you!");
            return;
        }
        request.setStatus("Completed");
        request.setTestResult("Sent to Immigration.");
        UserAccount account = new UserAccount();
        account.setUsername("None");
        request.getsecurityCheckWorkRequest().setReceiver(account);
        request.getsecurityCheckWorkRequest().setTestResult("Completed by Food Allocator and and sent to Immigration Clearance Officer");
        ImmigrationCheckWorkRequest fcRequest = new ImmigrationCheckWorkRequest();
        fcRequest.setMessage("Immigration Check-in");
        fcRequest.setSender(userAccount);
        fcRequest.setStatus("Sent");
        fcRequest.setPassengerPerson(request.getPassengerPerson());
        fcRequest.setsecurityCheckWorkRequest(request.getsecurityCheckWorkRequest());
        Date d = new Date();
        fcRequest.setRequestDate(d);
        Organization org = null;

        for (Network network : business.getNetworkList()) {
            //Step 2.a: check against each enterprise
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise instanceof ArrivalEnterprise) {
                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (organization instanceof Immigration) {
                            org = organization;
                            break;
                        }
                    }
                }
            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(fcRequest);
            userAccount.getWorkQueue().getWorkRequestList().add(fcRequest);
            JOptionPane.showMessageDialog(this, "Request Sent to Immigration Check-in Organization");
        }
    }//GEN-LAST:event_btnFoodAllocatedActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnFoodAllocated;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblPassengerRecords;
    private javax.swing.JTable tblPassengerRecords1;
    // End of variables declaration//GEN-END:variables
}
